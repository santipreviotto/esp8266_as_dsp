#!/bin/bash 
helpFunction()
{
    echo ""
    echo "Usage: $0 --p path"
    echo -e "\t-p Path of the code to be loaded in the IDE"
    echo -e "\t-v verbose [optional]"  
    exit 1 # Exit script after printing help
}

while getopts ":p:v:" o; do
    case "${o}" in
        p)
            CODE_PATH=${OPTARG}
            ;;
        v)
            VERBOSE=true
            ;;
        *)
            helpFunction
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${CODE_PATH}" ]; then
    echo "Path not specified, will use current directory ($(pwd))"
    echo "If you want to compile, your code should be on src/"
    CODE_PATH=$(pwd)
fi

if [ $VERBOSE ]; then
    set -x
fi 

docker run --rm -dit \
	--privileged \
	--name esp_tool \
	-e "YOUARECONTAINERIZEDBUDDY=y" \
	-e "TERM=xterm-256color" \
	-e "ESPBAUD=115200" \
    -e "WIFI_SSID=$WIFI_SSID" \
    -e "WIFI_PASS=$WIFI_PASS" \
    -v /dev/bus/usb:/dev/bus/usb \
	-w /project/src \
	-u $(id -u):$(id -g) \
	-v /etc/passwd:/etc/passwd:ro \
	-v /etc/group:/etc/group:ro \
	--group-add=sudo \
	--group-add=tty \
	--group-add=dialout \
	-v $CODE_PATH:/project santipreviotto/esp8266-utils:v1 \
    /bin/bash

# back up the private_ssid_config.h file
docker exec esp_tool mv /project/src/include/private_ssid_config.h /tmp/private_ssid_config.h.tmp

# make an environment variable substitution, this is hideous, please use NVRAM
docker exec -d esp_tool bash -c '../tools/replace_credentials'

# run bash
docker exec -it esp_tool bash

# restore the private_ssid_config.h file
docker exec esp_tool mv /tmp/private_ssid_config.h.tmp /project/src/include/private_ssid_config.h

# stop the container
docker stop esp_tool

